// Code generated by MockGen. DO NOT EDIT.
// Source: faker.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/JavaHutt/crud-api/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockfakerService is a mock of fakerService interface.
type MockfakerService struct {
	ctrl     *gomock.Controller
	recorder *MockfakerServiceMockRecorder
}

// MockfakerServiceMockRecorder is the mock recorder for MockfakerService.
type MockfakerServiceMockRecorder struct {
	mock *MockfakerService
}

// NewMockfakerService creates a new mock instance.
func NewMockfakerService(ctrl *gomock.Controller) *MockfakerService {
	mock := &MockfakerService{ctrl: ctrl}
	mock.recorder = &MockfakerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockfakerService) EXPECT() *MockfakerServiceMockRecorder {
	return m.recorder
}

// Fake mocks base method.
func (m *MockfakerService) Fake(num int) []model.Advertise {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fake", num)
	ret0, _ := ret[0].([]model.Advertise)
	return ret0
}

// Fake indicates an expected call of Fake.
func (mr *MockfakerServiceMockRecorder) Fake(num interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fake", reflect.TypeOf((*MockfakerService)(nil).Fake), num)
}

// MockadsService is a mock of adsService interface.
type MockadsService struct {
	ctrl     *gomock.Controller
	recorder *MockadsServiceMockRecorder
}

// MockadsServiceMockRecorder is the mock recorder for MockadsService.
type MockadsServiceMockRecorder struct {
	mock *MockadsService
}

// NewMockadsService creates a new mock instance.
func NewMockadsService(ctrl *gomock.Controller) *MockadsService {
	mock := &MockadsService{ctrl: ctrl}
	mock.recorder = &MockadsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockadsService) EXPECT() *MockadsServiceMockRecorder {
	return m.recorder
}

// InsertBulk mocks base method.
func (m *MockadsService) InsertBulk(ctx context.Context, ads []model.Advertise) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBulk", ctx, ads)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBulk indicates an expected call of InsertBulk.
func (mr *MockadsServiceMockRecorder) InsertBulk(ctx, ads interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBulk", reflect.TypeOf((*MockadsService)(nil).InsertBulk), ctx, ads)
}
